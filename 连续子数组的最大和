/*
*题目描述：输入一个整形数组，数组里有正数也有负数，
*数组中一个或连续多个的多个整数组成一个子数组，求
*所有子数组的和的最大值。
*题目分析：
*f(i) = arrar[i]  i==0 || f(i-1)<=0
		f(i-1)+array[i] i>0 && f(i-1)>0
*选取所有f(i)中的最大值
*/
int FindGreatestSumOfSubArray(vector<int> array) 
{
	int maxSum = INT_MIN;
	int sum = 0;
	int size = array.size();
	if (size == 0)
	{
		return 0;
	}
	for (int i = 0; i < size; ++i)
	{
		if (i == 0 || sum <= 0)
		{
			sum = array[i];
		}
		else
		{
			sum += array[i];
		}
		if (sum>maxSum)
		{
			maxSum = sum;
		}
	}
	return maxSum;
}
