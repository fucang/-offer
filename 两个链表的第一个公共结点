struct ListNode 
{
	int val;
	struct ListNode *next;
	ListNode(int x) : val(x), next(NULL) 
	{}
};
size_t ListLen(ListNode* pHead)
{
	ListNode* cur = pHead;
	size_t count = 0;
	while (cur)
	{
		cur = cur->next;
		++count;
	}
	return count;
}
ListNode* FindFirstCommonNode(ListNode *pHead1, ListNode *pHead2)
{
	if (pHead1 == NULL || pHead2 == NULL)
	{
		return NULL;
	}
	size_t len1 = ListLen(pHead1);
	size_t len2 = ListLen(pHead2);
	ListNode* cur1 = pHead1;
	ListNode* cur2 = pHead2;
	int subLen = len1 - len2;
	if (subLen > 0)
	{
		while (subLen--)
		{
			cur1 = cur1->next;
		}
	}
	else if (subLen < 0)
	{
		while (subLen++)
		{
			cur2 = cur2->next;
		}
	}
	while (cur1&&cur2)
	{
		if (cur1 == cur2)
		{
			return cur1;
		}
		cur1 = cur1->next;
		cur2 = cur2->next;
	}
	return NULL;
}
